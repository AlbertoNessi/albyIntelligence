$(document).ready(function () {
    const addNewRowBtn = $('#addNewRowBtn');
    const saveBtn = $('#saveBtn');
    const addNewRowModal = $('#addNewRowModal');
    const addNewRowForm = $('#addNewRowForm');
    const liveAlertPlaceholder = $('#liveAlertPlaceholder');
    const routes = {
        add: "{{ path('addNewRow_url') }}",
        update: "{{ path('update_row_url', {'id': 'ID_PLACEHOLDER'}) }}",
        delete: "{{ path('delete_row_url') }}"
    };
    let isEditMode = false;

    function showAlert(message, type = 'success') {
        const alertHtml = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;
        liveAlertPlaceholder.append(alertHtml);
    }

    addNewRowBtn.on('click', function () {
        isEditMode = false;
        addNewRowForm[0].reset();
        $('#addNewRowModalLabel').text('Add New Row');
        $('#rowId').val('');
    });

    $('#listTable').on('click', '.editRow', function () {
        isEditMode = true;
        const rowData = $(this).data('row');
        $('#addNewRowModalLabel').text('Edit Row');
        $('#rowId').val(rowData.id);
        $('#addNewRowForm').data('original-id', rowData.id);
        $('#addNewRowForm').data('table-id', rowData.table_id);

        {% for column in columns %}
            {% if column != 'id' %}
                $('#{{ column }}').val(rowData.{{ column }});
            {% endif %}
        {% endfor %}
    });

    saveBtn.on('click', function () {
        const formData = addNewRowForm.serializeArray();
        const data = {};
        $.each(formData, function (index, field) {
            data[field.name] = field.value;
        });

        const tableId = addNewRowForm.data('table-id');

        data['table_id'] = tableId;

        console.log(fdata);
        console.log(JSON.stringify(data));

        if (isEditMode) {
            const rowId = addNewRowForm.data('original-id');
            const updateUrl = routes.update.replace('ID_PLACEHOLDER', rowId);

            $.ajax({
                url: updateUrl,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    ...data,
                    table_id: tableId
                }),
                success: function (result) {
                    if (result.success) {
                        const updatedData = result.data;
                        const row = $(`button.editRow[data-row='${JSON.stringify({ id: rowId })}']`).closest('tr');

                        {% for column in columns %}
                            {% if column != 'id' %}
                                {% set index = loop.index0 %}
                                {% if column matches '/date/i' %}
                                    row.find('td').eq({{ index }}).text(new Date(updatedData.{{ column }}).toLocaleDateString('it-IT'));
                                {% else %}
                                    row.find('td').eq({{ index }}).text(updatedData.{{ column }});
                                {% endif %}
                            {% endif %}
                        {% endfor %}

                        row.find('.editRow').data('row', updatedData);
                        showAlert('Row updated successfully!', 'success');
                        addNewRowModal.modal('hide');
                    } else {
                        showAlert(`Failed to update the row: ${result.error}`, 'danger');
                    }
                },
                error: function () {
                    showAlert('An error occurred while updating the row.', 'danger');
                }
            });
        } else {
            $.ajax({
                url: routes.add,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (result) {
                    if (result.success) {
                        const newData = result.data;
                        let newRowHtml = '<tr>';
                        {% for column in columns %}
                            {% if column != 'id' %}
                                {% if column matches '/date/i' %}
                                    newRowHtml += `<td>${new Date(newData.{{ column }}).toLocaleDateString('it-IT')}</td>`;
                                {% else %}
                                    newRowHtml += `<td>${newData.{{ column }}}</td>`;
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                        newRowHtml += `
                            <td>
                                <button
                                    class="btn btn-outline-primary editRow"
                                    data-bs-toggle="modal"
                                    data-bs-target="#addNewRowModal"
                                    data-row='${JSON.stringify(newData)}'>
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button
                                    class="btn btn-outline-danger removeRow"
                                    data-id="${newData.id}">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </td>
                        </tr>`;
                        $('#listTable tbody').append(newRowHtml);
                        showAlert('Row added successfully!', 'success');
                        addNewRowForm[0].reset();
                        addNewRowModal.modal('hide');
                    } else {
                        showAlert(`Failed to add the row: ${result.error}`, 'danger');
                    }
                },
                error: function () {
                    showAlert('An error occurred while adding the row.', 'danger');
                }
            });
        }
    });

    $('#listTable').on('click', '.removeRow', function () {
        const rowId = $(this).data('id');
        const button = $(this);

        if (confirm('Are you sure you want to remove this row?')) {
            $.ajax({
                url: routes.delete,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ id: rowId, tableId: tableId }),
                success: function (result) {
                    if (result.success) {
                        button.closest('tr').remove();
                        showAlert('Row removed successfully!', 'success');
                    } else {
                        showAlert(`Failed to remove the row: ${result.error}`, 'danger');
                    }
                },
                error: function () {
                    showAlert('An error occurred while removing the row.', 'danger');
                }
            });
        }
    });
});