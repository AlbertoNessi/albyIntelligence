  $(document).ready(function() {
      function escapeHtml(unsafe) {
          return unsafe
              .replace(/&/g, "&amp;")
              .replace(/</g, "&lt;")
              .replace(/>/g, "&gt;")
              .replace(/"/g, "&quot;")
              .replace(/'/g, "&#039;");
      }

      function capitalizeFirstLetter(string) {
          if (typeof string !== 'string') return string;
          return string.charAt(0).toUpperCase() + string.slice(1);
      }

      function showResponse(responseData, message) {
          let responseHtml = `
          <div class="card mt-3">
              <div class="card-header">Question</div>
              <div class="card-body">
                  <p>` + message + `</p>
              </div>
          </div>
          <div class="card mt-3">
              <div class="card-header">Response</div>
              <div class="card-body">
                <p>` + responseData + `</p>
              </div>
          </div>`;

          $("#responseContainer").html(responseHtml);
      }

      function showAlert(message, type) {
          let alertHtml =
              `<div class="alert alert-${type} alert-dismissible fade show bg-success" role="alert">
              ${escapeHtml(message)}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>`;
          $("#alertContainer").html(alertHtml);

          setTimeout(function() {
              $(".alert").alert('close');
          }, 5000);
      }

      // Voice Input Functionality
      let recognition;
      if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
          const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
          recognition = new SpeechRecognition();
          recognition.lang = 'en-US';
          recognition.continuous = false;
          recognition.interimResults = false;

          $('#startVoiceInputBtn').on('click', function() {
              recognition.start();
              console.log("recognition start");
          });

          recognition.onresult = function(event) {
              console.log("onresult");
              const transcript = event.results[0][0].transcript;

              console.log("transcript: " + transcript);
              $('#userMessage').val(transcript);

              $('#sendUserMessageBtn').click();
          };

          recognition.onerror = function(event) {
              console.error('Speech recognition error:', event.error);
              showAlert('Speech recognition error: ' + event.error, 'danger');
          };

          recognition.onend = function() {
              console.log('Speech recognition ended');
          };
      } else {
          $('#startVoiceInputBtn').prop('disabled', true);
          showAlert('Speech recognition not supported in this browser.', 'warning');
      }

      // Event listener for the send button
      $('#sendUserMessageBtn').on('click', function(event) {
          event.preventDefault();
          let message = $('#userMessage').val().trim();

          // Input validation
          if (message === "") {
              showAlert('Please enter a message before sending.', 'warning');
              return;
          }

          // Disable the send button and show a loading indicator (optional)
          $('#sendUserMessageBtn').prop('disabled', true).text('Sending...');
          $('#loadingSpinner').show();

          // AJAX request to the backend
          $.ajax({
              url: '{{ url('searchInsideSemanticIndex_url') }}',
              type: 'POST',
              contentType: 'application/json',
              data: JSON.stringify({ message: message }),
              success: function(response) {
                  showResponse(response['message'], response['user_query']);
              },
              error: function(xhr, status, error) {
                  showAlert('Error! Failed to send data.', 'danger');
              },
              complete: function() {
                  $('#sendUserMessageBtn').prop('disabled', false).text('Send');
                  $('#loadingSpinner').hide();
                  $('#userMessage').val('');
              }
          });
      });

      function logUpdatedIndexTimestamp() {
          $.ajax({
              url: "{{ path('logIndexUpdate_url') }}",
              type: "POST",
              dataType: "json",
              data: {
                  _token: "{{ csrf_token('log_index_update') }}",
                  timestamp: new Date().toISOString()
              },
              success: function (response) {
                  fetchLastUpdatedTime();
              },
              error: function (xhr, status, error) {
                  console.error('Failed to log index update:', error);
              }
          });
      }

      // Function to fetch and display the last updated time
      function fetchLastUpdatedTime() {
          $.ajax({
              url: "{{ path('getLastUpdatedTime_url') }}",
              type: "GET",
              dataType: "json",
              success: function(response) {
                  if (response.updatedAt) {
                      $('#lastUpdatedTimestamp').text(response.updatedAt);
                  } else {
                      $('#lastUpdatedTimestamp').text('No updates yet.');
                  }
              },
              error: function (xhr, status, error) {
                  $('#lastUpdatedTimestamp').text('Error fetching last updated time.');
              }
          });
      }

      fetchLastUpdatedTime();

      $("#updateIndexBtn").on("click", function () {
          const btn = $(this);
          const normalState = btn.find('.normal-state');
          const loadingState = btn.find('.loading-state');

          // Disable button and show loading state
          btn.prop('disabled', true);
          normalState.addClass('d-none');
          loadingState.removeClass('d-none');

          $.ajax({
              url: "{{ path('indexDocuments_url') }}",
              type: "POST",
              dataType: "json",
              data: {
                  _token: "{{ csrf_token('update_index') }}"
              },
              success: function (response) {
                  console.log(response);
                  console.log(response.code);
                  if (response.code === 'OK') {
                      showAlert("success", response.message);

                      logUpdatedIndexTimestamp();
                  } else {
                      showAlert("warning", response.message);
                  }
              },
              error: function (xhr, status, error) {
                  console.log([xhr, status, error]);
                  showAlert("danger", "An error occurred: " + error);
              },
              complete: function() {
                  btn.prop('disabled', false);
                  normalState.removeClass('d-none');
                  loadingState.addClass('d-none');
              }
          });
      })

      $("#showCurrentSemanticIndex").on("click", function (){
          $.ajax({
              url: "{{ path('indexDocuments_url') }}",
              type: "POST",
              dataType: "json",
              data: {
                  _token: "{{ csrf_token('update_index') }}"
              },
              success: function (response) {
                  console.log(response);
                  console.log(response.code);
                  if (response.code === 'OK') {
                      showAlert("success", response.message);

                      logUpdatedIndexTimestamp();
                  } else {
                      showAlert("warning", response.message);
                  }
              },
              error: function (xhr, status, error) {
                  console.log([xhr, status, error]);
                  showAlert("danger", "An error occurred: " + error);
              },
              complete: function() {
                  btn.prop('disabled', false);
                  normalState.removeClass('d-none');
                  loadingState.addClass('d-none');
              }
          });
      });
  });
